apiVersion: v1
kind: ConfigMap
metadata:
  name: node-configurator-scripts
data:
  preflight_checks.sh: |
    #!/bin/bash

    echo "checking if nsenter to Node works ..."
    if [ -n "$(nsenter --all --target=1 -- sh -c uptime)" ]; then
      echo "SUCCESS"
    else
      echo "FAILED - nsenter not working on your Node - shutting down."
      exit 1
    fi

    echo "checking if Node running Ubuntu..."
    NODE_UNAME=$(nsenter --all --target=1 -- sh -c "uname -a")
    echo $NODE_UNAME
    if [ -n "$( echo $NODE_UNAME | grep Ubuntu)" ]; then
      echo "SUCCESS - Ubuntu detected"
    else
      echo "FAILED - No Ubuntu detected - shutting down."
      exit 1
    fi

    echo "checking if Node runs docker daemon ..."
    DOCKER_STATUS=$(nsenter --all --target=1 -- sh -c systemctl status docker)
    if [[ "$DOCKER_STATUS" == *"running"* ]]; then
      echo "SUCCESS - docker daemon detected"
    else
      echo "FAILED - docker daemon not running on your Node - shutting down."
      exit 1
    fi

    echo SUCESS - ALL PREFLIGHT CHECKS PASSED, CONTINUING

  copy_certs.sh: |
    #!/bin/bash
{{- if .Values.customCerts.removeOldCAs }}
    echo "removing /usr/local/share/ca-certificates/node-configurator..."
    rm -rf  /host/ca-certs/node-configurator
{{- end }}
    echo "creating empty directory /usr/local/share/ca-certificates/node-configurator..."
    mkdir -p /host/ca-certs/node-configurator
    echo "copying custom CAs to /usr/local/share/ca-certificates/node-configurator..."
    cp /configmaps/custom-certs/* /host/ca-certs/node-configurator/


  update_ca.sh: |
    #!/bin/bash
    echo "updating trusted certificates on Node..."
    echo "calling on host - /usr/sbin/update-ca-certificates"
    nsenter --all --target=1 -- sh -c /usr/sbin/update-ca-certificates

  restart_docker.sh: |
    #!/bin/bash
    echo "restarting docker daemon on host"
    echo "calling on host - systemctl restart docker; systemctl status docker"
    nsenter --all --target=1 -- sh -c "systemctl restart docker; systemctl status docker"

  run.sh: |
    #!/bin/bash
    sleep 10000
